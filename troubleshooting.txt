1. upon connecting the battery, it heats up like hell. 
	-measuring the voltage on the battery shows that there is a short between power and griund
	-measuring the voltage at the terminals of the regulators shows they are not delvering proper output

		hypothese:

			-the heat damaged the voltage regulators (not correct)
			- the regulators cannot handle the load (not correct)
			- there is some kind of short between power and ground.
				- this short is inhearent in the traces (not correct)
				-this short has something to do with the components (?????)


				tests:

					- remove the regulators and test each one seperately
					- apply an external ower source to the pcb
					- apply an external power source to a blank pcb
					- take off components little by little

		results:

			- VCC's of both power regulators are connected via a relatively high (but non 0) resistance
			- desoldering the regulators shows that that resistance mentioned directly above still exists.It is massive, however, I am not convinced 	that is the problem
			- Both regulators function properly.
			- the regulator handles a motor without problem
			- When an external 5V is applied, the voltage still colapses.
			- When a blank pcb is connected to power, there is no collapse.
			-The servo chip functionsproperly, it is not what has blown up

	********After connecting a couple AA batteries in the goal of seeing what would get hot, I saw some smoke. After that, power was no longer being 	shorted. Communication with the atmega worked fine.



2. TWINT bit is not being set when the microcontroller is connected to the board.
	-

		Hypothese:
			-Something is wrong with the level shifting hadware
			-Something is wrong with one of the sensors or with the servo chip

		tests:

			- I am going to split the connections of the servo chip and the sensors apart and test them seperately
			- Now that I have some hope for the servo chip, I will call it's adress
			- try talking to the acc and gyro seperately.


		results:

			-testing the acc/gyro system by itself, the problem persists
			-testing the servo chip by itself functions.
			-Calling the servo chip's adress functions aswell, I confirm it works fine. 



3. Having th atmega 328pb instead of atmega 328
	-2 TWI interfaces
	- satus code after a start is transmitted shows that sla+r has been transmitted.




4. Neither one of the muxes seems to be working.
	
	status: resolved. I've decided to use only the interrupts and pin change interrupts



	Software:

1. header file not included for atmega 328pb
	-See if you cant modify the one for atmega 328

	status: resolved. An appropriate header filewas found on github and added to the project



2. The init_extern_ints function stops the who;e program if I try to enable the external int 0;

	-resolved. No interrupt service routine for int 0 was created, so there was npthing to execute, the program went into error.

3. MY pwm read algorythim does not deliver anything.
	
	hypotheses:
		- interrupt not firing
		- timer not functioning (correct )


	tests:
		- the interrupt is firing at the right time

		status: resolved. I was writing to the wrong register when trying to init the timer. Also, I was misreading the 16 byte register, now I can read the pwm (note, at the time of writing, I am reading with the timer 0)

4. PWM is very innacurate ( ~20% off on readings)

	
	hypotheses:
		- The 8 bit time is not enough

	status: resolved. I just increased the prescaler and the timer becomes farmore accurate (although of course I lose some resolution).

5. EVery couple read cycles, the value read by PWM is off by quite a bit (though always by a constant ammount)

	hypotheses:

		-Something to do with timer overrun.

	Status: Unresolved but most likely will be ignored as values can be rejected by the software if thy are implausible.


6. TWINT bit not being set after start condition is sent

	hypotheses:

		-pullup rsistors not set.
		-prescalers fucked up

	results:

		- after pullups set, problem persists
		- after pullups set, problem persists

	status: solved. I was writing = instead of |= to the controll register and killing the TWI process by mistake
	status: selved. WHen interacting with the TWCR, write to it in one single line of code. (use = instead of |=)

7. PWM chip not outputting pwm despite accepting all data

	hypotheses:

		- registers are not autoincrementing
		- ~OE bit is not configure correctly

	results:

		-auto increment functions
		-set OE to 1, set OE to 0